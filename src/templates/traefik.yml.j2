{% raw %}
# {{ ansible_managed }} - Generated by Ansible

global:
  checkNewVersion: true
  sendAnonymousUsage: false

log:
  level: INFO # (DEBUG, INFO, WARNING, ERROR, CRITICAL)
  # filePath: /var/log/traefik.log

api:
  dashboard: true
  # insecure: true # Access dashboard at http://traefik.host:8080/dashboard/ - NOT RECOMMENDED FOR PRODUCTION
  # For secure dashboard access, define a router in dynamic config

entryPoints:
  web:
    address: ":80"
    # Optional: Redirect HTTP to HTTPS
    # http:
    #   redirections:
    #     entryPoint:
    #       to: websecure
    #       scheme: https
  websecure:
    address: ":443"
    http:
      tls:
        certResolver: cloudflare
        domains:
          {% set domains_list = [] %}
          {% for domain_item in loaded_domains.results %}
          {% set domain_cfg = domain_item.ansible_facts.domain_config %}
          {% set _ = domains_list.append({"main": domain_cfg.webmail}) %}
          {% set _ = domains_list.append({"main": domain_cfg.admin}) %}
          {% endfor %}
          - {{ domains_list | to_json }}
      middlewares:
        - crowdsec-bouncer@docker # Apply CrowdSec bouncer if enabled

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
    network: {{ traefik_network_name }}
  file:
    filename: /etc/traefik/dynamic_conf.yml
    watch: true

certificatesResolvers:
  cloudflare:
    acme:
      email: {{ lookup('env', 'CLOUDFLARE_EMAIL') | default('admin@' + primary_domain) }} # Replace with your actual ACME contact email
      storage: /certs/acme.json
      dnsChallenge:
        provider: cloudflare
        # delayBeforeCheck: 0 # Optional delay
        resolvers:
          - "1.1.1.1:53"
          - "8.8.8.8:53"
        # Use environment variables set in docker-compose for credentials
        # CLOUDFLARE_EMAIL and CLOUDFLARE_DNS_API_TOKEN or CLOUDFLARE_API_KEY
{% endraw %}